<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\vx.x\Config 
-->
<configuration>
  <appSettings>

    <add key="ConnectionString" value="Data Source=localhost;Initial Catalog=OttaMatta;user id=OTTAWEB;password=[redacted]" />

    <!-- Dev testing 
    <add key="ContentServer" value="http://localhost:82" />
    <add key="ServerName" value="http://localhost:82" />
    -->

    <!-- Testing website (not service) from the Mac 
    -->
    <add key="ContentServer" value="http://192.168.1.117:82" />
    <add key="ServerName" value="http://192.168.1.117:82" />

    <!-- Turn off to not actually store the data in the database, just test the UI -->
    <add key="EnableSoundUpload" value="true" />

    <!-- Turn off to allow sound uploads without having an icon-->
    <add key="RequireIconUpload" value="false" />

    <!-- The cache directory for sound conversion -->
    <add key="CacheSoundsDirectory" value="~/cache/sounds" />
    
    <!-- The cache dir for websearches -->
    <add key="CacheSearchesDirectory" value="~/cache/search" />

    <!-- The cache dir for websearches -->
    <add key="CacheWebobjectsDirectory" value="~/cache/webobjects" />

    <!-- Debug logging - should be false in production except when debugging -->
    <add key="EnableLogging" value="false" />
    
    <!-- Empty indicates use desktop.  Prolly won't work on a prod server.-->
    <add key="PathToLogfile" value="c:\inetpub\logs" />
         
  </appSettings>

  <system.web>

    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="true" targetFramework="4.0">
    </compilation>

    <!-- set this to "On" (capital O) to test the custom error page -->
    <customErrors mode="Off" defaultRedirect="otamata-err.htm" />

  </system.web>
  <system.serviceModel>
    
    <!-- This section is required to allow large file uploads.  It's used by the LargeUploadWebServiceHost class. -->
    <bindings>
      <webHttpBinding>
        <!-- Make sure this matches the value in the LargeUploadWebServiceHost class.  1024*200=204800  1024*300=307200 -->
        <binding name="rest" maxReceivedMessageSize="307200" />
      </webHttpBinding>
    </bindings>
    <services>
      <service name="OttaMatta.Application.Services.UploadSound" behaviorConfiguration="ServiceBehaviour">
        <endpoint address="" binding="webHttpBinding" bindingConfiguration="rest" contract="OttaMatta.Application.Services.IUploadSound" behaviorConfiguration="web">
        </endpoint>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="ServiceBehaviour">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="web">
          <webHttp />
        </behavior>
      </endpointBehaviors>
    </behaviors>

    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" aspNetCompatibilityEnabled="true" />
  </system.serviceModel>

  <system.webServer>
    <!-- This allows regular websites (e.g. typical ASPX pages, including this service) to get the runtime to handle REST service requests w/o "xxx.svc" in the url.  
    Essentially, you're removing the restriction on the routing module so it looks at all requests.
    See this page: http://www.britishdeveloper.co.uk/2010/06/dont-use-modules-runallmanagedmodulesfo.html
    -->
    <modules>
      <remove name="UrlRoutingModule-4.0" />
      <add name="UrlRoutingModule-4.0" type="System.Web.Routing.UrlRoutingModule" preCondition="" />
    </modules>
        <tracing>
            <traceFailedRequests>
                <add path="*">
                    <traceAreas>
                        <add provider="ASP" verbosity="Verbose" />
                        <add provider="ASPNET" areas="Infrastructure,Module,Page,AppServices" verbosity="Verbose" />
                        <add provider="ISAPI Extension" verbosity="Verbose" />
                        <add provider="WWW Server" areas="Authentication,Security,Filter,StaticFile,CGI,Compression,Cache,RequestNotifications,Module,FastCGI" verbosity="Verbose" />
                    </traceAreas>
                    <failureDefinitions statusCodes="200" />
                </add>
            </traceFailedRequests>
        </tracing>
  </system.webServer>

  <!-- 
  This section added to try to diagnose strange 400 bad request error on large file POSTs to the upload service.  It creates an error.svclog in the site directory. 
  Use this tool to view it.  Also see remarks in CustomWebServiceHostFactory.cs.  Do not turn this on in production unless you have to diagnose something.
    C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SvcTraceViewer.exe
  -->
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="myUserTraceSource" switchValue="Information, ActivityTracing">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="Error.svclog" />
    </sharedListeners>
  </system.diagnostics>
  <!-- End diagnostic section -->
  
  
</configuration>
